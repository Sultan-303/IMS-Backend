openapi: 3.0.0
info:
  title: IMS API
  version: 1.0.0
  description: API for Inventory Management System

servers:
  - url: http://localhost:5000/api
    description: Local server

paths:
  /items:
    get:
      summary: Get all items
      parameters:
        - name: sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: filter
          in: query
          description: Filter criteria
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: A list of items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
              examples:
                example1:
                  summary: Example response
                  value:
                    - id: 1
                      name: "Item1"
                      price: 10.0
                    - id: 2
                      name: "Item2"
                      price: 20.0
        '500':
          description: Internal Server Error
    post:
      summary: Add a new item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
            examples:
              example1:
                summary: Example request
                value:
                  name: "NewItem"
                  price: 15.0
      responses:
        '201':
          description: Item created
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /items/{id}:
    get:
      summary: Get item by ID
      parameters:
        - name: id
          in: path
          description: ID of the item to retrieve
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Item details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
              examples:
                example1:
                  summary: Example response
                  value:
                    id: 1
                    name: "Item1"
                    price: 10.0
        '404':
          description: Item not found
        '500':
          description: Internal Server Error
    put:
      summary: Update item by ID
      parameters:
        - name: id
          in: path
          description: ID of the item to update
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
            examples:
              example1:
                summary: Example request
                value:
                  id: 1
                  name: "UpdatedItem"
                  price: 20.0
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '404':
          description: Item not found
        '500':
          description: Internal Server Error
    delete:
      summary: Delete item by ID
      parameters:
        - name: id
          in: path
          description: ID of the item to delete
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content
        '404':
          description: Item not found
        '500':
          description: Internal Server Error

components:
  schemas:
    Item:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the item
        name:
          type: string
          description: Name of the item
        price:
          type: number
          format: float
          description: Price of the item
      required:
        - name
        - price
      example:
        id: 1
        name: "Item1"
        price: 10.0